import json
from dataclasses import dataclass, field
from datetime import datetime
from typing import Any, Dict, Optional


@dataclass
class Alert:
    """
    Alert class for representing alerts generated by strategies

    Attributes:
        title: Alert title
        description: Alert description
        severity: Alert severity level ("info", "low", "medium", "high", "critical")
        source: Source of the alert (e.g., collector name, strategy name)
        timestamp: Alert generation time
        data: Additional alert data
        id: Optional unique alert ID
    """

    title: str
    description: str
    severity: str  # "info", "low", "medium", "high", "critical"
    source: str
    timestamp: datetime
    data: Dict[str, Any] = field(default_factory=dict)
    id: Optional[str] = None

    def __post_init__(self):
        """Validate alert after initialization"""
        # Validate severity
        valid_severities = ["info", "low", "medium", "high", "critical"]
        if self.severity not in valid_severities:
            raise ValueError(
                f"Invalid severity: {self.severity}. Must be one of {valid_severities}"
            )

        # Set ID if not provided
        if not self.id:
            # Generate ID based on title, source, and timestamp
            ts_str = self.timestamp.isoformat()
            self.id = f"{self.source}_{ts_str}_{hash(self.title) % 10000:04d}"

    def to_dict(self) -> Dict[str, Any]:
        """Convert alert to dictionary"""
        return {
            "id": self.id,
            "title": self.title,
            "description": self.description,
            "severity": self.severity,
            "source": self.source,
            "timestamp": self.timestamp.isoformat(),
            "data": self.data,
        }

    def to_json(self) -> str:
        """Convert alert to JSON string"""
        return json.dumps(self.to_dict(), default=str)

    @classmethod
    def from_dict(cls, data: Dict[str, Any]) -> "Alert":
        """Create alert from dictionary"""
        # Convert timestamp string to datetime
        if isinstance(data.get("timestamp"), str):
            data["timestamp"] = datetime.fromisoformat(
                data["timestamp"].replace("Z", "+00:00")
            )
        return cls(**data)
